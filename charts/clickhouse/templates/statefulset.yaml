{{- $fullname := include "clickhouse.fullname" . -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $fullname }}
  labels:
    {{- include "clickhouse.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  serviceName: {{ $fullname }}
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      {{- include "clickhouse.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "clickhouse.selectorLabels" . | nindent 8 }}
      annotations:
        {{- toYaml .Values.podAnnotations | nindent 8 }}
    spec:
      {{- range .Values.image.pullSecrets }}
      imagePullSecrets:
        - name: {{ . }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: clickhouse-server
          image: {{ include "clickhouse.image" . | quote }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          command:
            - /bin/sh
            - -c
          args:
            - /pre_init.sh && /entrypoint.sh
          env:
          - name: CLICKHOUSE_ADMIN_USERNAME
            value: "{{ .Values.init.username }}"
          - name: CLICKHOUSE_ADMIN_PASSWORD
            value: "{{ .Values.init.password }}"
          - name: REDIS_ADMIN_USERNAME
            value: "admin"
          - name: REDIS_ADMIN_PASSWORD
            value: "123456"
    {{- if .Values.dep.kafka.auth.enabled }}
        {{- if .Values.global.isViper }}
          - name: KAFKA_USERNAME
            value: "admin"
          - name: KAFKA_PASSWORD
            value: "123456"
        {{- else }}
          - name: KAFKA_USERNAME
            value: {{ include "kafka.username" . | quote }}
          - name: KAFKA_PASSWORD
            value: {{ include "kafka.password" . | quote }}
        {{- end }}
    {{- end }}
          ports:
          - name: rpc
            containerPort: {{ .Values.service.port.rpc }}
            protocol: TCP
          - name: rest
            containerPort: {{ .Values.service.port.rest }}
            protocol: TCP
          - name: interserver
            containerPort: {{ .Values.service.port.internal }}
            protocol: TCP
          resources:
        {{- if eq "amd64" .Values.global.hostArch }}
            {{- toYaml .Values.resources.amd64 | nindent 12 }}
        {{- end }}
        {{- if eq "arm64" .Values.global.hostArch }}
            {{- toYaml .Values.resources.arm64 | nindent 12 }}
        {{- end }}
          volumeMounts:
          - name: clickhouse-data
            mountPath: /var/lib/clickhouse
          - name: clickhouse-config
            mountPath: /etc/clickhouse-server/config.xml
            subPath: config.xml
          - name: clickhouse-config
            mountPath: /etc/clickhouse-server/config.d/remote_servers.xml
            subPath: remote_servers.xml
          - name: clickhouse-config
            mountPath: /etc/clickhouse-server/config.d/zookeeper.xml
            subPath: zookeeper.xml
          - name: clickhouse-config
            mountPath: /tmp/clickhouse/users.xml
            subPath: users.xml
        {{- if .Values.dep.redis.enabled }}
          - name: clickhouse-config
            mountPath: /tmp/clickhouse/extern_redis_config.xml
            subPath: extern_redis_config.xml
        {{- end }}
        {{- if .Values.dep.kafka.auth.enabled }}
          - name: clickhouse-config
            mountPath: /tmp/clickhouse/kafka.xml
            subPath: kafka.xml
        {{- end }}
          - name: clickhouse-config
            subPath: "pre_init.sh"
            mountPath: /pre_init.sh
            readOnly: true
          - name: clickhouse-config
            subPath: "init_component.sh"
            mountPath: /init_component.sh
            readOnly: true
        - name: clickhouse-exporter
          image: {{ include "exporter.image" . | quote }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          command:
            - 'sh'
            - '-c'
            - '/usr/local/bin/clickhouse_exporter'
          ports:
          - name: metrics
            containerPort: {{ .Values.service.port.metrics }}
            protocol: TCP
          resources:
            requests:
              cpu: "500m"
              memory: "500Mi"
            limits:
              cpu: "500m"
              memory: "500Mi"
          env:
          - name: CLICKHOUSE_USER
            value: "{{ .Values.init.username }}"
          - name: CLICKHOUSE_PASSWORD
            value: "{{ .Values.init.password }}"
      volumes:
        - name: clickhouse-config
          configMap:
            name: {{ $fullname }}-config
            defaultMode: 0755
  volumeClaimTemplates:
  - metadata:
      name: clickhouse-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.persistence.storageClass | quote }}
      resources:
        requests:
          storage: {{ .Values.persistence.volumeSize | quote }}
